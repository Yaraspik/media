(()=>{"use strict";class t{static createDate(){const t=new Date;let e=t.getHours(),o=t.getMinutes(),i=t.getDate(),r=t.getMonth()+1;return e=e<10?`0${e}`:e,o=o<10?`0${o}`:o,i=i<10?`0${i}`:i,r=r<10?`0${r}`:r,`${e}:${o} ${i}.${r}.${t.getFullYear()}`}static createCard(e){const o=document.createElement("div");o.classList.add("container","right");const i=document.createElement("div");i.classList.add("content");const r=document.createElement("p");r.textContent=`${e}`;const s=document.createElement("p"),n=t.createDate(),a=document.createElement("div");return a.classList.add("date"),a.textContent=n,i.append(a,r,s),o.append(i),{container:o,geo:s}}}class e{static getNavigation(){if(!navigator.geolocation)throw new Error("Your browser can`t check location");return new Promise(((t,e)=>{navigator.geolocation.getCurrentPosition((e=>{t(e.coords)}),(t=>{e(t)}),{enableHighAccuracy:!0})}))}}class o{static formValidate(t){const e={patternMismatch:"Введите координаты по шаблону: 00.00000",valueMissing:"Введите координаты"},{elements:o}=t,i=Object.keys(ValidityState.prototype);return![...o].some((t=>i.some((o=>!!t.name&&("valid"!==o&&(t.validity[o]?(console.log(o),t.setCustomValidity(e[o]),!0):(t.setCustomValidity(""),!1)))))))||(t.reportValidity(),!1)}static validateForTests(t){return/[?\d+.\d+[, −]+\d+\.\d+]?/.test(t)}}const i=document.querySelector(".timeline"),r=new class{constructor(t){this.container=t,this.controls=this.container.querySelector(".controls"),this.timelineForm=this.container.querySelector(".text-input__form"),this.popup=document.querySelector(".coords-popup"),this.popupForm=this.popup.querySelector(".coords-form")}init(){this.timelineForm.addEventListener("submit",(t=>this.addCardToTimeline(t)))}async addCardToTimeline(o){o.preventDefault();const i=new FormData(o.target).get("content").trim();try{const t=await e.getNavigation();this.latitude=t.latitude,this.longitude=t.longitude}catch(t){1===t.code&&(this.popup.showModal(),await this.responseUserCoords(),this.popup.close())}const r=t.createCard(i);r.geo.textContent=`${this.latitude}, ${this.longitude}`,this.container.prepend(r.container),o.target.reset()}getUserCoords(t,e){t.preventDefault();if(!o.formValidate(t.target))return;const i=new FormData(t.target);this.latitude=i.get("latitude"),this.longitude=i.get("longitude"),this.popupForm.removeEventListener("submit",this.getUserCoords),e()}async responseUserCoords(){return new Promise((t=>{this.popupForm.addEventListener("submit",(e=>this.getUserCoords(e,t)))}))}}(i);r.init()})();
//# sourceMappingURL=main.js.map